{"version":3,"sources":["components/Header.js","components/Wrapper.js","utils/API.js","components/Search.js","components/Table.js","components/Main.js","App.js","index.js"],"names":["Header","className","Wrapper","props","children","axios","get","Search","name","type","placeholder","onChange","handleInputChange","Table","allEmployees","searchValue","handleSort","id","onClick","map","employee","formatYmd","Date","dob","date","first","includes","src","picture","thumbnail","alt","last","cell","email","getFullYear","getMonth","getDate","Main","useState","setEmployees","setSearch","sortOrder","setSort","useEffect","API","then","res","data","results","e","target","value","sorted","sort","a","b","localeCompare","App","state","employees","console","log","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAaeA,MATf,WACE,OACE,sBAAKC,UAAU,mBAAf,UACE,oBAAIA,UAAU,SAAd,gCACA,mBAAGA,UAAU,iBAAb,uGCESC,MARf,SAAkBC,GACd,OACI,8BACKA,EAAMC,Y,iBCJJ,EAEH,WACR,OAAOC,IAAMC,IAAI,iD,OCeNC,EAjBC,SAACJ,GACb,OACI,+BACI,qBAAKF,UAAU,mBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,uBACAO,KAAK,SACLC,KAAK,OACLR,UAAU,cACVS,YAAY,SACZC,SAAUR,EAAMS,2BC0BrBC,EAnCD,SAAC,GAAgD,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAGzC,OACI,qBAAKf,UAAU,kBAAf,SACA,wBAAOgB,GAAG,QAAV,UACI,gCACI,+BACI,uCACA,6BAAI,sBAAMA,GAAG,YAAYC,QAASF,EAA9B,oBACJ,uCACA,uCACA,0CAGR,gCACCF,EAAaK,KAAI,SAACC,GACf,IAAMC,EAAY,IAAIC,KAAKF,EAASG,IAAIC,MAExC,OAAOJ,EAASZ,KAAKiB,MAAMC,SAASX,GACpC,+BACA,6BAAI,qBAAKY,IAAKP,EAASQ,QAAQC,UAAWC,IAAKV,EAASZ,SACxD,6BAAKY,EAASZ,KAAKiB,MAAQ,IAAML,EAASZ,KAAKuB,OAC/C,6BAAKX,EAASY,OACd,6BAAKZ,EAASa,QACd,6BAAKZ,EAAUa,cAAc,KAAOb,EAAUc,WAAW,GAAK,IAAId,EAAUe,eAExE,gBCKLC,MA7Bf,WACI,MAAqCC,mBAAS,IAA9C,mBAAOxB,EAAP,KAAqByB,EAArB,KACA,EAAiCD,mBAAS,IAA1C,mBAAOvB,EAAP,KAAoByB,EAApB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,qBAAU,WACNC,IAAeC,MAAK,SAACC,GAAD,OAASP,EAAaO,EAAIC,KAAKC,cACpD,IAeC,qCACA,cAAC,EAAD,CAAQpC,kBAdc,SAACqC,GACvBT,EAAUS,EAAEC,OAAOC,QAa2BA,MAAOpC,IACrD,cAAC,EAAD,CAAOD,aAAcA,EAAcC,YAAaA,EAAa0B,UAAWA,EAAWC,QAASA,EAAS1B,WAXtF,SAACiC,GAChBP,GAASD,GAET,IAAMW,EAAWX,EAAkF3B,EAAauC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE/C,KAAKuB,KAAKyB,cAAcF,EAAE9C,KAAKuB,SAAnIjB,EAAauC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE9C,KAAKuB,KAAKyB,cAAcD,EAAE/C,KAAKuB,SAE1FQ,EAAaa,UCMNK,E,4MAtBbC,MAAQ,CACNC,UAAW,I,uDAGb,WAAqB,IAAD,OAClBf,IAAeC,MAAK,SAAAG,GAClBY,QAAQC,IAAIb,GACZ,EAAKc,SAAS,CAACH,UAAWX,EAAQD,KAAKC,e,oBAI3C,WAEE,OADAY,QAAQC,IAAIE,KAAKL,MAAMC,WAErB,eAAC,EAAD,WACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GAlBYK,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6e3f8db6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// dumb function for header\nfunction Header() {\n  return (\n    <div className='container-header'>\n      <h1 className=\"header\">Employee Directory</h1>\n      <p className='header-content'>Click on red arrow to filter by heading or use the search box to narrow your results.</p>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react'\n\nfunction Wrapper (props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Wrapper;\n","import axios from \"axios\";\nexport default {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=45&nat=us\");\n  }\n};\n","import React from 'react'\n\n const Search = (props) => {\n    return (\n        <form>\n            <div className='search-container'>\n                <div className='search'>\n                    <input \n                    name='search' \n                    type='text' \n                    className='search-text' \n                    placeholder='Search' \n                    onChange={props.handleInputChange}/>\n                </div>\n            </div>\n        </form>\n    )\n}\n\nexport default Search;","import React from 'react';\nimport './style.css';\n\nconst Table = ({  allEmployees, searchValue, handleSort }) => {\n \n\n    return (\n        <div className='table-container'>\n        <table id=\"table\">\n            <thead>\n                <tr>\n                    <th>Image</th>\n                    <th><span id='filterBtn' onClick={handleSort}>Name</span></th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>DOB</th>\n                </tr>\n            </thead>\n            <tbody>\n            {allEmployees.map((employee) => {\n                const formatYmd = new Date(employee.dob.date)\n\n                return employee.name.first.includes(searchValue) ? (\n                <tr>\n                <th><img src={employee.picture.thumbnail} alt={employee.name}></img></th>\n                <td>{employee.name.first + \" \" + employee.name.last}</td>\n                <td>{employee.cell}</td>\n                <td>{employee.email}</td>\n                <td>{formatYmd.getFullYear()+'-' + (formatYmd.getMonth()+1) + '-'+formatYmd.getDate()}</td>\n            </tr> \n                ) : null;\n            })}\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default Table\n","import React, { useState, useEffect } from 'react';\nimport './style.css';\nimport Search from './Search';\nimport API from '../utils/API';\nimport Table from './Table'\n\nfunction Main() {\n    const [allEmployees, setEmployees] = useState([]);\n    const [searchValue, setSearch] = useState('');\n    const [sortOrder , setSort] = useState(false)\n\n    useEffect(() => {\n        API.getUsers().then((res) => setEmployees(res.data.results))\n    }, []);\n\n    const handleInputChange = (e) => {\n        setSearch(e.target.value)\n    }\n\n    const handleSort = (e) => {\n        setSort(!sortOrder);\n\n        const sorted = (!sortOrder ? allEmployees.sort((a, b) => a.name.last.localeCompare(b.name.last)) : allEmployees.sort((a, b) => b.name.last.localeCompare(a.name.last)));\n\n        setEmployees(sorted);\n    }\n    \n    return (\n        <>\n        <Search handleInputChange={handleInputChange} value={searchValue}/>\n        <Table allEmployees={allEmployees} searchValue={searchValue} sortOrder={sortOrder} setSort={setSort} handleSort={handleSort}/>\n        </>\n    )\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport API from './utils/API'\nimport Main from './components/Main';\n\nclass App extends Component {\n\n  state = {\n    employees: []\n  }\n\n  componentDidMount() {\n    API.getUsers().then(results => {\n      console.log(results);\n      this.setState({employees: results.data.results})\n    })\n  }\n\n  render() {\n    console.log(this.state.employees);\n    return (\n      <Wrapper>\n      <Header />\n      <Main />\n      </Wrapper>\n     );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}